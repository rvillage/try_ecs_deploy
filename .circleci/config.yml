version: 2

jobs:
  build:
    docker:
      - image: docker:edge-git
        environment:
          PROJECT_NAME: try_ecs_deploy
          ECR_HOST: 086937360264.dkr.ecr.ap-northeast-1.amazonaws.com/rvillage
          AWSCLI_VERSION: 1.11.100
    working_directory: /builder
    branches:
      only:
        - deploy/production
        - deploy/staging
        - master
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
      - run:
          name: Install AWS-CLI
          command: |
            set -ex
            apk --update --upgrade add --no-cache python py-pip
            pip --no-cache-dir install awscli==${AWSCLI_VERSION}
      - restore_cache:
          name: Restoring Docker image
          keys:
            - image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "Gemfile" }}
            - image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-
      - run:
          name: Load application Docker image
          command: |
            if [ -e image.tar ]; then
              docker load -q -i image.tar
            fi
      - run:
          name: Build application Docker image
          command: |
            if [ -e image.tar ]; then
              rm image.tar
              docker build --cache-from rvillage/${PROJECT_NAME}:latest -t rvillage/${PROJECT_NAME}:latest -f docker/Dockerfile.release .
            else
              docker build -t rvillage/${PROJECT_NAME}:latest -f docker/Dockerfile.release .
            fi
      - run:
          name: Save application Docker image
          command: |
            docker save -o image.tar rvillage/${PROJECT_NAME}:latest
      - save_cache:
          name: Cache Docker image
          key: image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "Gemfile" }}
          paths:
            - image.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "deploy/staging" ]; then
              $(aws ecr get-login --no-include-email --region ap-northeast-1)
              docker tag rvillage/${PROJECT_NAME}:latest ${ECR_HOST}/${PROJECT_NAME}:${CIRCLE_SHA1}
              docker push ${ECR_HOST}/${PROJECT_NAME}:${CIRCLE_SHA1}
            fi
