version: 2

jobs:
  build:
    docker:
      - image: docker:edge-git
        environment:
          PROJECT_NAME: try_ecs_deploy
          ECR_HOST: 086937360264.dkr.ecr.ap-northeast-1.amazonaws.com/rvillage
          AWSCLI_VERSION: 1.11.100
    working_directory: /builder
    branches:
      only:
        - deploy/production
        - deploy/staging
        - master
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
      - run:
          name: Install AWS-CLI
          command: |
            set -ex
            apk --update --upgrade add --no-cache python py-pip
            pip --no-cache-dir install awscli==${AWSCLI_VERSION}
      - run:
          name: Install ECS-CLI
          command: |
            wget -O /bin/ecs-cli http://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest
            chmod +x /bin/ecs-cli
      - restore_cache:
          name: Restoring Docker image
          keys:
            - v1-image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "Gemfile.lock" }}
            - v1-image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-
      - run:
          name: Load application Docker image
          command: |
            if [ -e ~/cache/image.tar ]; then
              docker load -q -i ~/cache/image.tar
            fi
      - run:
          name: Build application Docker image
          command: |
            if [ -e ~/cache/image.tar ]; then
              docker build --cache-from rvillage/${PROJECT_NAME}:latest -t rvillage/${PROJECT_NAME}:latest -f docker/Dockerfile.release .
            else
              docker build -t rvillage/${PROJECT_NAME}:latest -f docker/Dockerfile.release .
            fi
      - run:
          name: Save application Docker image
          command: |
            mkdir -p ~/cache
            if [ -e ~/cache/Gemfile.lock.sha1 ]; then
              sha1sum -s -c ~/cache/Gemfile.lock.sha1
              [ $? = 0 ] && exit 0
            fi
            echo "Create Docker image Cachefile."
            rm -f ~/cache/*
            sha1sum Gemfile.lock > ~/cache/Gemfile.lock.sha1
            docker save -o ~/cache/image.tar rvillage/${PROJECT_NAME}:latest
      - save_cache:
          name: Cache Docker image
          key: v1-image-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/cache
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "deploy/staging" ]; then
              $(aws ecr get-login --no-include-email --region ap-northeast-1)
              docker tag rvillage/${PROJECT_NAME}:latest ${ECR_HOST}/${PROJECT_NAME}:${CIRCLE_SHA1}
              docker push ${ECR_HOST}/${PROJECT_NAME}:${CIRCLE_SHA1}
              ecs-cli configure --region ap-northeast-1 --cluster try-ecs-deploy-cluster
              ecs-cli compose --verbose --file docker/docker-compose.web.yml --project-name try-ecs-deploy service up --target-group-arn arn:aws:elasticloadbalancing:ap-northeast-1:086937360264:loadbalancer/app/try-ecs-deploy-alb/3e1fc43caec0f468 --container-name rails --container-port 3000 --role ecsServiceRole
            fi
